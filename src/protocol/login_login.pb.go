// Code generated by protoc-gen-go.
// source: login_login.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

type CVerifyToken struct {
	Data             *string `protobuf:"bytes,1,opt" json:"Data,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt" json:"Appid,omitempty"`
	IP               *string `protobuf:"bytes,3,opt" json:"IP,omitempty"`
	Device           *uint32 `protobuf:"varint,4,opt" json:"Device,omitempty"`
	MacAddr          *string `protobuf:"bytes,5,opt" json:"MacAddr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVerifyToken) Reset()         { *m = CVerifyToken{} }
func (m *CVerifyToken) String() string { return proto.CompactTextString(m) }
func (*CVerifyToken) ProtoMessage()    {}

func (m *CVerifyToken) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *CVerifyToken) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CVerifyToken) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *CVerifyToken) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CVerifyToken) GetMacAddr() string {
	if m != nil && m.MacAddr != nil {
		return *m.MacAddr
	}
	return ""
}

// 验证响应
type SVerifyToken struct {
	Data             *ProtoUser `protobuf:"bytes,1,opt" json:"Data,omitempty"`
	IsOtherOnline    *bool      `protobuf:"varint,2,opt" json:"IsOtherOnline,omitempty"`
	State            *uint32    `protobuf:"varint,3,opt" json:"State,omitempty"`
	RoomId           *uint32    `protobuf:"varint,4,opt" json:"RoomId,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SVerifyToken) Reset()         { *m = SVerifyToken{} }
func (m *SVerifyToken) String() string { return proto.CompactTextString(m) }
func (*SVerifyToken) ProtoMessage()    {}

func (m *SVerifyToken) GetData() *ProtoUser {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SVerifyToken) GetIsOtherOnline() bool {
	if m != nil && m.IsOtherOnline != nil {
		return *m.IsOtherOnline
	}
	return false
}

func (m *SVerifyToken) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SVerifyToken) GetRoomId() uint32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

// 三方登录请求
type CLogin struct {
	Appid            *uint32 `protobuf:"varint,1,opt" json:"Appid,omitempty"`
	PF               *uint32 `protobuf:"varint,2,opt" json:"PF,omitempty"`
	Device           *uint32 `protobuf:"varint,3,opt" json:"Device,omitempty"`
	Account          *string `protobuf:"bytes,4,opt" json:"Account,omitempty"`
	Token            *string `protobuf:"bytes,5,opt" json:"Token,omitempty"`
	IP               *string `protobuf:"bytes,6,opt" json:"IP,omitempty"`
	MacAddr          *string `protobuf:"bytes,7,opt" json:"MacAddr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CLogin) Reset()         { *m = CLogin{} }
func (m *CLogin) String() string { return proto.CompactTextString(m) }
func (*CLogin) ProtoMessage()    {}

func (m *CLogin) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CLogin) GetPF() uint32 {
	if m != nil && m.PF != nil {
		return *m.PF
	}
	return 0
}

func (m *CLogin) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CLogin) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *CLogin) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CLogin) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *CLogin) GetMacAddr() string {
	if m != nil && m.MacAddr != nil {
		return *m.MacAddr
	}
	return ""
}

// 游客登录请求
type CGuestLogin struct {
	Appid            *uint32 `protobuf:"varint,1,opt" json:"Appid,omitempty"`
	DeviceId         *string `protobuf:"bytes,2,opt" json:"DeviceId,omitempty"`
	Device           *uint32 `protobuf:"varint,3,opt" json:"Device,omitempty"`
	Sign             *string `protobuf:"bytes,4,opt" json:"Sign,omitempty"`
	IP               *string `protobuf:"bytes,5,opt" json:"IP,omitempty"`
	MacAddr          *string `protobuf:"bytes,6,opt" json:"MacAddr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGuestLogin) Reset()         { *m = CGuestLogin{} }
func (m *CGuestLogin) String() string { return proto.CompactTextString(m) }
func (*CGuestLogin) ProtoMessage()    {}

func (m *CGuestLogin) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGuestLogin) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *CGuestLogin) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CGuestLogin) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *CGuestLogin) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *CGuestLogin) GetMacAddr() string {
	if m != nil && m.MacAddr != nil {
		return *m.MacAddr
	}
	return ""
}

// 登录响应
type SLogin struct {
	State            *uint32    `protobuf:"varint,1,opt" json:"State,omitempty"`
	Data             *ProtoUser `protobuf:"bytes,2,opt" json:"Data,omitempty"`
	Token            *string    `protobuf:"bytes,3,opt" json:"Token,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SLogin) Reset()         { *m = SLogin{} }
func (m *SLogin) String() string { return proto.CompactTextString(m) }
func (*SLogin) ProtoMessage()    {}

func (m *SLogin) GetState() uint32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *SLogin) GetData() *ProtoUser {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SLogin) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

// 再次登录请求
type CVerifyToken1 struct {
	Appid            *uint32 `protobuf:"varint,1,opt" json:"Appid,omitempty"`
	Uid              *uint32 `protobuf:"varint,2,opt" json:"Uid,omitempty"`
	Token            *string `protobuf:"bytes,3,opt" json:"Token,omitempty"`
	Device           *uint32 `protobuf:"varint,4,opt" json:"Device,omitempty"`
	IP               *string `protobuf:"bytes,5,opt" json:"IP,omitempty"`
	MacAddr          *string `protobuf:"bytes,6,opt" json:"MacAddr,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CVerifyToken1) Reset()         { *m = CVerifyToken1{} }
func (m *CVerifyToken1) String() string { return proto.CompactTextString(m) }
func (*CVerifyToken1) ProtoMessage()    {}

func (m *CVerifyToken1) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CVerifyToken1) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *CVerifyToken1) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CVerifyToken1) GetDevice() uint32 {
	if m != nil && m.Device != nil {
		return *m.Device
	}
	return 0
}

func (m *CVerifyToken1) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *CVerifyToken1) GetMacAddr() string {
	if m != nil && m.MacAddr != nil {
		return *m.MacAddr
	}
	return ""
}

// 挤号
type SForceOutUser struct {
	Uid              *uint32 `protobuf:"varint,1,opt" json:"Uid,omitempty"`
	IP               *string `protobuf:"bytes,2,opt" json:"IP,omitempty"`
	City             *string `protobuf:"bytes,3,opt" json:"City,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SForceOutUser) Reset()         { *m = SForceOutUser{} }
func (m *SForceOutUser) String() string { return proto.CompactTextString(m) }
func (*SForceOutUser) ProtoMessage()    {}

func (m *SForceOutUser) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *SForceOutUser) GetIP() string {
	if m != nil && m.IP != nil {
		return *m.IP
	}
	return ""
}

func (m *SForceOutUser) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func init() {
}
