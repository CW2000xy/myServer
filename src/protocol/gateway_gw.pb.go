// Code generated by protoc-gen-go.
// source: gateway_gw.proto
// DO NOT EDIT!

package protocol

import proto "code.google.com/p/goprotobuf/proto"
import json "encoding/json"
import math "math"

// Reference proto, json, and math imports to suppress error if they are not otherwise used.
var _ = proto.Marshal
var _ = &json.SyntaxError{}
var _ = math.Inf

// 用户在线状态。
type UserOnlineStatus int32

const (
	UserOnlineStatus_ONLINESTATUS_NULL          UserOnlineStatus = 0
	UserOnlineStatus_ONLINESTATUS_LOGIN         UserOnlineStatus = 1
	UserOnlineStatus_ONLINESTATUS_WAIT_CREATE   UserOnlineStatus = 2
	UserOnlineStatus_ONLINESTATUS_CREATE        UserOnlineStatus = 3
	UserOnlineStatus_ONLINESTATUS_NORMAL        UserOnlineStatus = 4
	UserOnlineStatus_ONLINESTATUS_LOGOUT        UserOnlineStatus = 5
	UserOnlineStatus_ONLINESTATUS_LOGOUT_REPEAT UserOnlineStatus = 6
)

var UserOnlineStatus_name = map[int32]string{
	0: "ONLINESTATUS_NULL",
	1: "ONLINESTATUS_LOGIN",
	2: "ONLINESTATUS_WAIT_CREATE",
	3: "ONLINESTATUS_CREATE",
	4: "ONLINESTATUS_NORMAL",
	5: "ONLINESTATUS_LOGOUT",
	6: "ONLINESTATUS_LOGOUT_REPEAT",
}
var UserOnlineStatus_value = map[string]int32{
	"ONLINESTATUS_NULL":          0,
	"ONLINESTATUS_LOGIN":         1,
	"ONLINESTATUS_WAIT_CREATE":   2,
	"ONLINESTATUS_CREATE":        3,
	"ONLINESTATUS_NORMAL":        4,
	"ONLINESTATUS_LOGOUT":        5,
	"ONLINESTATUS_LOGOUT_REPEAT": 6,
}

func (x UserOnlineStatus) Enum() *UserOnlineStatus {
	p := new(UserOnlineStatus)
	*p = x
	return p
}
func (x UserOnlineStatus) String() string {
	return proto.EnumName(UserOnlineStatus_name, int32(x))
}
func (x *UserOnlineStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserOnlineStatus_value, data, "UserOnlineStatus")
	if err != nil {
		return err
	}
	*x = UserOnlineStatus(value)
	return nil
}

type ServiceType int32

const (
	ServiceType_ServiceType_DBACensus ServiceType = 0
	ServiceType_ServiceType_Center    ServiceType = 1
	ServiceType_ServiceType_Gateway   ServiceType = 2
	ServiceType_ServiceType_Login     ServiceType = 3
	ServiceType_ServiceType_DBA       ServiceType = 4
	ServiceType_ServiceType_Game      ServiceType = 5
)

var ServiceType_name = map[int32]string{
	0: "ServiceType_DBACensus",
	1: "ServiceType_Center",
	2: "ServiceType_Gateway",
	3: "ServiceType_Login",
	4: "ServiceType_DBA",
	5: "ServiceType_Game",
}
var ServiceType_value = map[string]int32{
	"ServiceType_DBACensus": 0,
	"ServiceType_Center":    1,
	"ServiceType_Gateway":   2,
	"ServiceType_Login":     3,
	"ServiceType_DBA":       4,
	"ServiceType_Game":      5,
}

func (x ServiceType) Enum() *ServiceType {
	p := new(ServiceType)
	*p = x
	return p
}
func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}
func (x *ServiceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ServiceType_value, data, "ServiceType")
	if err != nil {
		return err
	}
	*x = ServiceType(value)
	return nil
}

type HeartBeat struct {
	InGame           *bool  `protobuf:"varint,1,opt" json:"InGame,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *HeartBeat) Reset()         { *m = HeartBeat{} }
func (m *HeartBeat) String() string { return proto.CompactTextString(m) }
func (*HeartBeat) ProtoMessage()    {}

func (m *HeartBeat) GetInGame() bool {
	if m != nil && m.InGame != nil {
		return *m.InGame
	}
	return false
}

// 服务注册
type ServerRegist struct {
	ServerId         *int32  `protobuf:"varint,1,opt" json:"ServerId,omitempty"`
	ServiceType      *int32  `protobuf:"varint,2,opt" json:"ServiceType,omitempty"`
	ServiceAddress   *string `protobuf:"bytes,3,opt" json:"ServiceAddress,omitempty"`
	AppId            *int32  `protobuf:"varint,4,opt" json:"AppId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerRegist) Reset()         { *m = ServerRegist{} }
func (m *ServerRegist) String() string { return proto.CompactTextString(m) }
func (*ServerRegist) ProtoMessage()    {}

func (m *ServerRegist) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

func (m *ServerRegist) GetServiceType() int32 {
	if m != nil && m.ServiceType != nil {
		return *m.ServiceType
	}
	return 0
}

func (m *ServerRegist) GetServiceAddress() string {
	if m != nil && m.ServiceAddress != nil {
		return *m.ServiceAddress
	}
	return ""
}

func (m *ServerRegist) GetAppId() int32 {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return 0
}

// 用户离线通知
type UserLineOffNotify struct {
	UserId           *uint32 `protobuf:"varint,1,opt" json:"UserId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserLineOffNotify) Reset()         { *m = UserLineOffNotify{} }
func (m *UserLineOffNotify) String() string { return proto.CompactTextString(m) }
func (*UserLineOffNotify) ProtoMessage()    {}

func (m *UserLineOffNotify) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 网关注册
type GateWayRegist struct {
	ServerId         *int32 `protobuf:"varint,1,opt" json:"ServerId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GateWayRegist) Reset()         { *m = GateWayRegist{} }
func (m *GateWayRegist) String() string { return proto.CompactTextString(m) }
func (*GateWayRegist) ProtoMessage()    {}

func (m *GateWayRegist) GetServerId() int32 {
	if m != nil && m.ServerId != nil {
		return *m.ServerId
	}
	return 0
}

// 游戏服通知网关玩家状态
type UpdateGameUserStatus struct {
	UserId           *uint32 `protobuf:"varint,1,opt" json:"UserId,omitempty"`
	Type             *int32  `protobuf:"varint,2,opt" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdateGameUserStatus) Reset()         { *m = UpdateGameUserStatus{} }
func (m *UpdateGameUserStatus) String() string { return proto.CompactTextString(m) }
func (*UpdateGameUserStatus) ProtoMessage()    {}

func (m *UpdateGameUserStatus) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UpdateGameUserStatus) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func init() {
	proto.RegisterEnum("protocol.UserOnlineStatus", UserOnlineStatus_name, UserOnlineStatus_value)
	proto.RegisterEnum("protocol.ServiceType", ServiceType_name, ServiceType_value)
}
